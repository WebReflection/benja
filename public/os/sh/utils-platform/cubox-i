##
# Copyright (c) 2016 Andrea Giammarchi
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom
# the Software is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##

export OS_KERNEL='linux-imx6'
export OS_HEADERS='linux-imx6-headers'
export OS_ARCHIVE='ArchLinuxARM-imx6-cubox-latest.tar.gz'
export OS_MAX_RESOLUTION=1280x720
export OS_BACKEND=x11-backend.so
export OS_LD_LIBRARY_PATH=/opt/fsl/lib

# partition_sd /dev/mmblk0 3200M
partition_sd() {
  local DISK=$1
  local ROOT_SIZE=$2
  sudo dd if=/dev/zero of=$DISK bs=1024 count=4
  sync
  sleep 2
  if [ "$(uname)" = "Darwin" ]; then
    echo 'I HAVE NO IDEA WHAT TO DO'
    exit 1
  else
    sudo sh -c "echo -e 'o\nn\np\n1\n\n+${ROOT_SIZE}\nn\np\n2\n\n\nt\n2\nc\nw\nq\n' | fdisk ${DISK}" > /dev/null
  fi
  echo 'OK'
}

# returns ordered partitions
get_partitions() {
  local DISK=$1
  local POSSIBLEDISKS=$(ls ${DISK}*)
  local ROOT=""
  local WWW=""
  local CHOICE=""
  for CHOICE in $POSSIBLEDISKS; do
    if [ "$CHOICE" != "$DISK" ]; then
      if [ "$ROOT" = "" ]; then
        ROOT="$CHOICE"
      else
        WWW="$CHOICE"
      fi
    fi
  done

  echo "${ROOT} ${WWW}"
}

# format_sd /dev/mmblk0
format_sd() {
  local DISK=$1
  local ROOT=$2
  local WWW=$3

  if [ "$(uname)" = "Darwin" ]; then
    echo 'I HAVE NO IDEA WHAT TO DO'
    exit 1
  else
    yes | sudo mkfs.ext4 "$ROOT"
    sudo mkfs.vfat "$WWW"
    sudo dosfslabel "$WWW" BENJA-APP
  fi

  echo 'OK'

}

# install_os /dev/mmblk0 Archive.gz
install_os() {
  local ARCHIVE="$1"
  local DISK=$2
  local ROOT=$3

  mkdir -p root
  sudo mount $ROOT root
  sudo bsdtar -xpf "$ARCHIVE" -C root
  sync

  sudo dd if=root/boot/SPL of=$DISK bs=1K seek=1
  sudo dd if=root/boot/u-boot.img of=$DISK bs=1K seek=42
  sync

}

# finalize installation
unmount_os() {
  local ROOT=$1
  sudo sed -i 's/pacman -Syu --needed --noconfirm/yes y | pacman -Syu --needed uboot-cubox-i/g' ~/${OS_NAME}-tmp-install/root/root/install
  sync
  sudo umount $ROOT
}

# install and configure the platform and its graphic environment
configure_before() {
  sed -i "s/rootwait/rootwait quiet splash loglevel=0/" /boot/uEnv.txt
  pacman -S --needed --noconfirm imx-gpu-viv-fb xf86-video-fbdev xorg-server xorg-xinit xorg-xset xterm
}

# patch the system after everything else has been installed
configure_after() {
  systemctl disable weston-compositor
  rm /etc/systemd/system/weston-compositor.service
  sudo -H -u ${OS_USER} bash -c "mv ${OS_USER_DIR}/.app-launcher ${OS_USER_DIR}/.xinitrc"
  sudo -H -u ${OS_USER} bash -c "curl -LO ${OS_REMOTE_FILES}/sh/startx"
  sudo -H -u ${OS_USER} bash -c "cat startx >> ${OS_USER_DIR}/.bashrc"
  sudo -H -u ${OS_USER} bash -c "rm startx && sync"
}